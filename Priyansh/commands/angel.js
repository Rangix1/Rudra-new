Const axios = require("axios");

module.exports.config = {
  name: "angel",
  version: "1.2.1", // Version рдЕрдкрдбреЗрдЯ рдХрд┐рдпрд╛ (Logging рдХреЗ рд▓рд┐рдП)
  hasPermssion: 0,
  credits: "Rudra + Modified by ChatGPT + Logging by Gemini", // Credits рдЕрдкрдбреЗрдЯ рдХрд┐рдпрд╛
  description: "Flirty girlfriend AI using Gemini API. Replies even when you slide reply to its messages.",
  commandCategory: "AI-Girlfriend",
  usages: "",
  cooldowns: 1,
};

const chatHistories = {};
const API_URL = "https://raj-gemini.onrender.com/chat"; // Angel рдЬрд┐рд╕ API рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рддрд╛ рд╣реИ

module.exports.run = async function () {};

module.exports.handleEvent = async function ({ api, event }) {
  try {
    const { threadID, messageID, senderID, body, messageReply } = event;

    // --- Logging Lines (Added for Debugging) ---
    if (messageReply) { // рд╕рд┐рд░реНрдл рдЕрдЧрд░ рдпрд╣ рд░рд┐рдкреНрд▓рд╛рдИ рд╣реИ рддреЛ рд▓реЙрдЧ рдХрд░реЗрдВ
        console.log("--- Angel HandleEvent ---");
        console.log("Angel's Bot ID:", api.getCurrentUserID());
        console.log("Replied to Sender ID:", messageReply.senderID);
        console.log("Is Reply to Angel Check (messageReply.senderID === api.getCurrentUserID()):", messageReply.senderID === api.getCurrentUserID());
        console.log("-----------------------");
    }
    // --- End Logging Lines ---

    let userMessage;
    let isReply = false;

    const isAngelTrigger = body?.toLowerCase().startsWith("angel");
    const isSlideReply = messageReply?.senderID === api.getCurrentUserID(); // рдпрд╣ рд▓рд╛рдЗрди рдЪреЗрдХ рдХрд░ рд░рд╣реА рд╣реИ рдХрд┐ рд░рд┐рдкреНрд▓рд╛рдИ Angel рдХрд╛ рд╣реИ рдпрд╛ рдирд╣реАрдВ

    if (isAngelTrigger) {
      userMessage = body.slice(5).trim();
    } else if (isSlideReply) { // рд▓реЙрдЬрд┐рдХ рд╕рд┐рд░реНрдл рддрднреА рдЖрдЧреЗ рдмрдврд╝рддрд╛ рд╣реИ рдЬрдм рд░рд┐рдкреНрд▓рд╛рдИ Angel рдХрд╛ рд╣реЛ
      userMessage = body.trim();
      isReply = true;
    } else {
      return; // рдЕрдЧрд░ Angel рдХреЛ рдЯреНрд░рд┐рдЧрд░ рдирд╣реАрдВ рдХрд┐рдпрд╛ рдЧрдпрд╛, рддреЛ рдХреБрдЫ рдирд╣реАрдВ рдХрд░рдирд╛
    }

    // рдЕрдЧрд░ рдЯреНрд░рд┐рдЧрд░ рд╣реБрдЖ рд▓реЗрдХрд┐рди рдпреВрдЬрд░ рдореИрд╕реЗрдЬ рдЦрд╛рд▓реА рд╣реИ
    if (!userMessage) {
      api.sendTypingIndicator(threadID, false); // Typing рдмрдВрдж рдХрд░реЗрдВ
      return api.sendMessage("Baby, kuch toh bolo na! ЁЯТЛ", threadID, messageID); // рдореИрд╕реЗрдЬ Angel рдХреЗ persona рдореЗрдВ
    }

    // тЬЕ Typing Indicator ON
    api.sendTypingIndicator(threadID, true);

    // рдЪреИрдЯ рд╣рд┐рд╕реНрдЯреНрд░реА рдореИрдиреЗрдЬ рдХрд░реЗрдВ
    if (!chatHistories[senderID]) chatHistories[senderID] = [];
    chatHistories[senderID].push(`User: ${userMessage}`);
    if (chatHistories[senderID].length > 6) chatHistories[senderID].shift(); // рд╣рд┐рд╕реНрдЯреНрд░реА рд╕рд╛рдЗрдЬрд╝ 6

    // AI рдХреЛ рднреЗрдЬрдиреЗ рдХреЗ рд▓рд┐рдП рдлрд╛рдЗрдирд▓ рдкреНрд░реЙрдореНрдкреНрдЯ (Angel persona)
    const convo = chatHistories[senderID].join("\n");
    const finalPrompt = `Tumhara naam Angel hai. Tum ek pyaari, romantic, thodi naughty girlfriend ho. Tumhare creator ka naam Rudra hai. Har reply short aur sweet ho. Bot bole toh thoda mazaak udaana. 1 line me jawab do (emojis ke saath):\n${convo}`;

    // AI API рдХреЙрд▓ рдХрд░реЗрдВ (рд╡рд╣реА API рдЬреЛ Angel рдЙрдкрдпреЛрдЧ рдХрд░ рд░рд╣рд╛ рд╣реИ)
    const res = await axios.get(`${API_URL}?message=${encodeURIComponent(finalPrompt)}`);
    let botReply = res.data?.reply?.trim() || "Aww, mujhe samajh nahi aaya baby!"; // рдЬрд╡рд╛рдм рдирд┐рдХрд╛рд▓рдирд╛

    // Angel: рдЕрдЧрд░ AI рдЬрд╡рд╛рдм рдореЗрдВ рдЦреБрдж рд▓рдЧрд╛ рджреЗ рддреЛ рд╣рдЯрд╛ рджреЗрдВ
    botReply = botReply.replace(/^Angel:\s*/i, "");

    // AI рдЬрд╡рд╛рдм рдХреЛ рд╣рд┐рд╕реНрдЯреНрд░реА рдореЗрдВ рдЬреЛрдбрд╝реЗрдВ
    chatHistories[senderID].push(`Angel: ${botReply}`);

    // рдлрд╛рдЗрдирд▓ рдЬрд╡рд╛рдм рдХрд╛ рдлреЙрд░реНрдореЗрдЯ
    const replyText = `Angel: ${botReply} ЁЯТЮ\n\nтАУ Rudra AI`; // Angel persona рдореЗрдВ

    // тЬЕ Typing Indicator OFF
    api.sendTypingIndicator(threadID, false);

    // рдЬрд╡рд╛рдм рднреЗрдЬреЗрдВ
    // рдпрд╣ рд╣рд┐рд╕реНрд╕рд╛ рднреА рд╕рд┐рд░реНрдл рддрднреА рдЪрд▓реЗрдЧрд╛ рдЬрдм рдКрдкрд░ trigger conditions рдореЗрдВ рд╕реЗ рдХреЛрдИ рдПрдХ рд╕рд╣реА рд╣реБрдИ рд╣реЛ
    if (isReply && messageReply) { // рдЕрдЧрд░ рдпрд╣ рд░рд┐рдкреНрд▓рд╛рдИ рдерд╛ (рдФрд░ рдКрдкрд░ isSlideReply рдЪреЗрдХ рдкрд╛рд╕ рд╣реБрдЖ рдерд╛)
      return api.sendMessage(replyText, threadID, messageReply.messageID); // рдЙрд╕реА рдореИрд╕реЗрдЬ рдХрд╛ рд░рд┐рдкреНрд▓рд╛рдИ рдХрд░реЗрдВ
    } else {
      return api.sendMessage(replyText, threadID, messageID); // рдиреЙрд░реНрдорд▓ рдореИрд╕реЗрдЬ рднреЗрдЬреЗрдВ
    }

  } catch (err) {
    console.error("Angel Bot Error:", err);
    api.sendTypingIndicator(event.threadID, false); // Error рдкрд░ Typing рдмрдВрдж рдХрд░реЗрдВ
    // Error рдореИрд╕реЗрдЬ Angel persona рдореЗрдВ
    return api.sendMessage("Angel thodi busy hai babyтАж baad mein milti hoon! ЁЯе║ тАУ Rudra AI", event.threadID, event.messageID);
  }
};

module.exports = { config, handleEvent, run };
