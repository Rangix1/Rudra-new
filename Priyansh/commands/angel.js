Const axios = require("axios");

module.exports.config = {
  name: "angel",
  version: "1.2.2", // Version рдЕрдкрдбреЗрдЯ рдХрд┐рдпрд╛ (реЫреНрдпрд╛рджрд╛ Logging рдХреЗ рд▓рд┐рдП)
  hasPermssion: 0,
  credits: "Rudra + Modified by ChatGPT + Extensive Logging by Gemini", // Credits рдЕрдкрдбреЗрдЯ рдХрд┐рдпрд╛
  description: "Flirty girlfriend AI using Gemini API. Replies when addressed by name or replied to.", // Description рдЕрдкрдбреЗрдЯ рдХрд┐рдпрд╛
  commandCategory: "AI-Girlfriend",
  usages: "angel [рдЖрдкрдХрд╛ рдореИрд╕реЗрдЬ] / Reply to Angel", // Usages рдЕрдкрдбреЗрдЯ рдХрд┐рдпрд╛
  cooldowns: 1,
};

const chatHistories = {};
const API_URL = "https://raj-gemini.onrender.com/chat"; // Angel рдЬрд┐рд╕ API рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рддрд╛ рд╣реИ

module.exports.run = async function () {};

module.exports.handleEvent = async function ({ api, event }) {
  try {
    const { threadID, messageID, senderID, body, messageReply } = event;

    // --- Logging Lines (Reply Messages рдХреЗ рд▓рд┐рдП) ---
    if (messageReply) { // рд╕рд┐рд░реНрдл рдЕрдЧрд░ рдпрд╣ рд░рд┐рдкреНрд▓рд╛рдИ рд╣реИ рддреЛ рд▓реЙрдЧ рдХрд░реЗрдВ
        console.log("--- Angel HandleEvent (Reply) ---");
        console.log("Angel's Bot ID:", api.getCurrentUserID());
        console.log("Replied to Sender ID:", messageReply.senderID);
        console.log("Is Reply to Angel Check (messageReply.senderID === api.getCurrentUserID()):", messageReply.senderID === api.getCurrentUserID());
        console.log("-----------------------");
    }
    // --- End Reply Logging Lines ---

    // --- Logging Lines (Non-Reply Messages рдХреЗ рд▓рд┐рдП) ---
    if (!messageReply && body) { // рд╕рд┐рд░реНрдл рдЕрдЧрд░ рдпрд╣ рд░рд┐рдкреНрд▓рд╛рдИ рдирд╣реАрдВ рд╣реИ рдФрд░ рдореИрд╕реЗрдЬ рдЦрд╛рд▓реА рдирд╣реАрдВ рд╣реИ
        console.log("--- Angel HandleEvent (Non-Reply) ---");
        console.log("Raw Message Body:", body); // рдореИрд╕реЗрдЬ рдХрд╛ рдЕрд╕рд▓реА рдЯреЗрдХреНрд╕реНрдЯ рджреЗрдЦреЗрдВ
        console.log("Message Body (toLowerCase):", body.toLowerCase());
        const isAngelTriggerCheck = body.toLowerCase().startsWith("angel"); // рдЪреЗрдХ рдХрд╛ рд░рд┐рдЬрд▓реНрдЯ рд▓реЙрдЧ рдХрд░реЗрдВ
        console.log("isAngelTrigger check (startsWith('angel')):", isAngelTriggerCheck);
        console.log("-----------------------");
    }
    // --- End Non-Reply Logging Lines ---


    let userMessage;
    let isReply = false;

    const isAngelTrigger = body?.toLowerCase().startsWith("angel"); // рдЯреНрд░рд┐рдЧрд░ рдЪреЗрдХ: рдХреНрдпрд╛ рдореИрд╕реЗрдЬ "angel" рд╕реЗ рд╢реБрд░реВ рд╣реЛрддрд╛ рд╣реИ
    const isSlideReply = messageReply?.senderID === api.getCurrentUserID(); // рдЯреНрд░рд┐рдЧрд░ рдЪреЗрдХ: рдХреНрдпрд╛ рдпрд╣ Angel рдХреЗ рдореИрд╕реЗрдЬ рдХрд╛ рд░рд┐рдкреНрд▓рд╛рдИ рд╣реИ

    if (isAngelTrigger) { // рдЕрдЧрд░ рдореИрд╕реЗрдЬ "angel" рд╕реЗ рд╢реБрд░реВ рд╣реЛрддрд╛ рд╣реИ
      // --- Logging Line (isAngelTrigger TRUE рд╣реЛрдиреЗ рдкрд░) ---
      console.log("--- Angel HandleEvent: isAngelTrigger TRUE, processing... ---");
      // --- End Logging Line ---
      userMessage = body.slice(5).trim(); // Angel рдХреЗ рдмрд╛рдж рдХрд╛ рдореИрд╕реЗрдЬ рд▓реЛ
    } else if (isSlideReply) { // рдЕрдЧрд░ рдпрд╣ Angel рдХреЗ рдореИрд╕реЗрдЬ рдХрд╛ рд░рд┐рдкреНрд▓рд╛рдИ рд╣реИ
      userMessage = body.trim(); // рд░рд┐рдкреНрд▓рд╛рдИ рдХрд╛ рдкреВрд░рд╛ рдореИрд╕реЗрдЬ рд▓реЛ
      isReply = true;
    } else {
      return; // рдЕрдЧрд░ Angel рдХреЛ рдХрд┐рд╕реА рднреА рддрд░рд╣ рдЯреНрд░рд┐рдЧрд░ рдирд╣реАрдВ рдХрд┐рдпрд╛ рдЧрдпрд╛, рддреЛ рдпрд╣рд╛рдБ рд╕реЗ рдлрд╝рдВрдХреНрд╢рди рдЦрддреНрдо
    }

    // рдЕрдЧрд░ рдЯреНрд░рд┐рдЧрд░ рд╣реБрдЖ рд▓реЗрдХрд┐рди рдпреВрдЬрд░ рдореИрд╕реЗрдЬ рдЦрд╛рд▓реА рд╣реИ (рдЬреИрд╕реЗ рд╕рд┐рд░реНрдл "angel" рд▓рд┐рдЦрд╛)
    if (!userMessage) {
      api.sendTypingIndicator(threadID, false);
      return api.sendMessage("Baby, kuch toh bolo na! ЁЯТЛ", threadID, messageID); // Angel рдХреЗ persona рдореЗрдВ рдЬрд╡рд╛рдм
    }

    // тЬЕ Typing Indicator ON
    api.sendTypingIndicator(threadID, true);

    // рдЪреИрдЯ рд╣рд┐рд╕реНрдЯреНрд░реА рдореИрдиреЗрдЬ рдХрд░реЗрдВ
    if (!chatHistories[senderID]) chatHistories[senderID] = [];
    chatHistories[senderID].push(`User: ${userMessage}`);
    if (chatHistories[senderID].length > 6) chatHistories[senderID].shift(); // рд╣рд┐рд╕реНрдЯреНрд░реА рд╕рд╛рдЗрдЬрд╝ 6 (Angel рдХреЗ original code рдЬреИрд╕рд╛)

    // AI рдХреЛ рднреЗрдЬрдиреЗ рдХреЗ рд▓рд┐рдП рдлрд╛рдЗрдирд▓ рдкреНрд░реЙрдореНрдкреНрдЯ (Angel persona)
    const convo = chatHistories[senderID].join("\n");
    const finalPrompt = `Tumhara naam Angel hai. Tum ek pyaari, romantic, thodi naughty girlfriend ho. Tumhare creator ka naam Rudra hai. Har reply short aur sweet ho. Bot bole toh thoda mazaak udaana. 1 line me jawab do (emojis ke saath):\n${convo}`;

    // AI API рдХреЙрд▓ рдХрд░реЗрдВ (рд╡рд╣реА API рдЬреЛ Angel рдЙрдкрдпреЛрдЧ рдХрд░ рд░рд╣рд╛ рд╣реИ)
    const res = await axios.get(`${API_URL}?message=${encodeURIComponent(finalPrompt)}`);
    let botReply = res.data?.reply?.trim() || "Aww, mujhe samajh nahi aaya baby!"; // рдЬрд╡рд╛рдм рдирд┐рдХрд╛рд▓рдирд╛

    // Angel: рдЕрдЧрд░ AI рдЬрд╡рд╛рдм рдореЗрдВ рдЦреБрдж рд▓рдЧрд╛ рджреЗ рддреЛ рд╣рдЯрд╛ рджреЗрдВ
    botReply = botReply.replace(/^Angel:\s*/i, "");

    // AI рдЬрд╡рд╛рдм рдХреЛ рд╣рд┐рд╕реНрдЯреНрд░реА рдореЗрдВ рдЬреЛрдбрд╝реЗрдВ
    chatHistories[senderID].push(`Angel: ${botReply}`);

    // рдлрд╛рдЗрдирд▓ рдЬрд╡рд╛рдм рдХрд╛ рдлреЙрд░реНрдореЗрдЯ
    const replyText = `Angel: ${botReply} ЁЯТЮ\n\nтАУ Rudra AI`; // Angel persona рдореЗрдВ

    // тЬЕ Typing Indicator OFF
    api.sendTypingIndicator(threadID, false);

    // рдЬрд╡рд╛рдм рднреЗрдЬреЗрдВ
    // рдпрд╣ рд╣рд┐рд╕реНрд╕рд╛ рд╕рд┐рд░реНрдл рддрднреА рдЪрд▓реЗрдЧрд╛ рдЬрдм рдКрдкрд░ trigger conditions рдореЗрдВ рд╕реЗ рдХреЛрдИ рдПрдХ рд╕рд╣реА рд╣реБрдИ рд╣реЛ
    if (isReply && messageReply) { // рдЕрдЧрд░ рдпрд╣ рд░рд┐рдкреНрд▓рд╛рдИ рдерд╛ (рдФрд░ рдКрдкрд░ isSlideReply рдЪреЗрдХ рдкрд╛рд╕ рд╣реБрдЖ рдерд╛)
      return api.sendMessage(replyText, threadID, messageReply.messageID); // рдЙрд╕реА рдореИрд╕реЗрдЬ рдХрд╛ рд░рд┐рдкреНрд▓рд╛рдИ рдХрд░реЗрдВ
    } else {
      return api.sendMessage(replyText, threadID, messageID); // рдиреЙрд░реНрдорд▓ рдореИрд╕реЗрдЬ рднреЗрдЬреЗрдВ
    }

  } catch (err) {
    console.error("Angel Bot Error:", err);
    api.sendTypingIndicator(event.threadID, false); // Error рдкрд░ Typing рдмрдВрдж рдХрд░реЗрдВ
    // Error рдореИрд╕реЗрдЬ Angel persona рдореЗрдВ
    return api.sendMessage("Angel thodi busy hai babyтАж baad mein milti hoon! ЁЯе║ тАУ Rudra AI", event.threadID, event.messageID);
  }
};

module.exports = { config, handleEvent, run };
