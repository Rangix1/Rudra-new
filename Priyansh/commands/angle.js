// рдЖрд╡рд╢реНрдпрдХ рд▓рд╛рдЗрдмреНрд░реЗрд░реАрдЬ:
// @google/generative-ai рдХреЛ рдЗрдВрд╕реНрдЯреЙрд▓ рдХрд░рдирд╛ рд╣реЛрдЧрд╛: npm install @google/generative-ai
// рдпрджрд┐ рдмреЙрдЯ рдлреНрд░реЗрдорд╡рд░реНрдХ рдХреЗ рд▓рд┐рдП рдЖрд╡рд╢реНрдпрдХ рд╣реЛ рддреЛ fs-extra рдФрд░ path рд░рдЦреЗрдВ, рдЕрдиреНрдпрдерд╛ рдЬрд╝рд░реВрд░рдд рдирд╣реАрдВред
// const fs = require('fs-extra');
// const path = require('path');


// Google Generative AI рдХреНрд▓рд╛рдЗрдВрдЯ рдХреЛ API Key рдХреЗ рд╕рд╛рде рдЗрдирд┐рд╢рд┐рдпрд▓рд╛рдЗрдЬрд╝ рдХрд░реЗрдВред
// API Key рдХреЛ ENVIRONMENT VARIABLE (process.env.GOOGLE_API_KEY) рд╕реЗ рд▓рд┐рдпрд╛ рдЬрд╛рдПрдЧрд╛ред
// **рдорд╣рддреНрд╡рдкреВрд░реНрдг: рдЖрдкрдХреЛ рдмреЙрдЯ рдЪрд▓рд╛рдиреЗ рд╕реЗ рдкрд╣рд▓реЗ GOOGLE_API_KEY рдПрдирд╡рд╛рдпрд░рдирдореЗрдВрдЯ рд╡реЗрд░рд┐рдПрдмрд▓ рд╕реЗрдЯ рдХрд░рдирд╛ рд╣реЛрдЧрд╛!**

const { GoogleGenerativeAI } = require('@google/generative-ai'); // Google AI рд▓рд╛рдЗрдмреНрд░реЗрд░реА

const apiKey = process.env.GOOGLE_API_KEY;

if (!apiKey) {
    console.error("FATAL ERROR: GOOGLE_API_KEY environment variable is not set.");
    console.error("рдХреГрдкрдпрд╛ рдЕрдкрдиреЗ рдмреЙрдЯ рдЪрд▓рд╛рдиреЗ рд╡рд╛рд▓реЗ рд╕рд┐рд╕реНрдЯрдо/рдПрдирд╡рд╛рдпрд░рдирдореЗрдВрдЯ рдкрд░ GOOGLE_API_KEY рдПрдирд╡рд╛рдпрд░рдирдореЗрдВрдЯ рд╡реЗрд░рд┐рдПрдмрд▓ рдореЗрдВ рдЕрдкрдиреА Google Cloud/AI Studio API Key рд╕реЗрдЯ рдХрд░реЗрдВред рдЗрд╕ рдХрдорд╛рдВрдб рдХреЛ рдирд┐рд╖реНрдХреНрд░рд┐рдп рдХрд┐рдпрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИред");
    // рдпрджрд┐ key рд╕реЗрдЯ рдирд╣реАрдВ рд╣реИ рддреЛ рдХреНрд▓рд╛рдЗрдВрдЯ рдХреЛ рдЗрдирд┐рд╢рд┐рдпрд▓рд╛рдЗрдЬрд╝ рди рдХрд░реЗрдВ рдФрд░ рдХрдорд╛рдВрдб рдХреЛ рдирд┐рд╖реНрдХреНрд░рд┐рдп рдорд╛рдиреЗрдВред
    // рдЖрдк рдмреЙрдЯ рд╕реНрдЯрд╛рд░реНрдЯрдЕрдк рд╕реНрдХреНрд░рд┐рдкреНрдЯ рдореЗрдВ рдПрдХ рдЪреЗрдХ рднреА рдЬреЛрдбрд╝ рд╕рдХрддреЗ рд╣реИрдВред
}

let genAI = null;
let model = null;

if (apiKey) {
    try {
        genAI = new GoogleGenerativeAI(apiKey);
        // рдЙрдкрдпреЛрдЧ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдореЙрдбрд▓ рдЪреБрдиреЗрдВ (gemini-pro рд╕рд╛рдорд╛рдиреНрдп рдЪреИрдЯ рдХреЗ рд▓рд┐рдП рдЕрдЪреНрдЫрд╛ рд╣реИ)
        // Google Cloud Console/AI Studio рдореЗрдВ рдЙрдкрд▓рдмреНрдз рдореЙрдбрд▓реНрд╕ рдХреА рд╕реВрдЪреА рджреЗрдЦреЗрдВред
        // рдпрджрд┐ gemini-pro рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ рд╣реИ, рддреЛ 'gemini-pro-vision' рдпрд╛ рдЕрдиреНрдп рдЯреЗрдХреНрд╕реНрдЯ рдореЙрдбрд▓ рдЯреНрд░рд╛рдИ рдХрд░реЗрдВред
        model = genAI.getGenerativeModel({ model: "gemini-pro" });
        console.log("тЬЕ Angel Command: Google Generative AI рдХреНрд▓рд╛рдЗрдВрдЯ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЗрдирд┐рд╢рд┐рдпрд▓рд╛рдЗрдЬрд╝ рд╣реБрдЖред");
    } catch (e) {
        console.error("ЁЯФ┤ Angel Command: Google Generative AI рдХреНрд▓рд╛рдЗрдВрдЯ рдЗрдирд┐рд╢рд┐рдпрд▓рд╛рдЗрдЬрд╝ рдХрд░рдиреЗ рдореЗрдВ рдПрд░рд░:", e);
        console.error("рдХреГрдкрдпрд╛ рдЬрд╛рдВрдЪреЗрдВ рдХрд┐ рдЖрдкрдХреА API Key рд╕рд╣реА рд╣реИ рдФрд░ рдЖрдкрдХреЗ Google Cloud рдкреНрд░реЛрдЬреЗрдХреНрдЯ рдореЗрдВ Gemini API рд╕рдХреНрд╖рдо рд╣реИред");
        genAI = null; // рдПрд░рд░ рд╣реЛрдиреЗ рдкрд░ рдХреНрд▓рд╛рдЗрдВрдЯ рдХреЛ рдирд┐рд╖реНрдХреНрд░рд┐рдп рд╕реЗрдЯ рдХрд░реЗрдВ
        model = null;
    }
}


const chatHistories = {}; // рд╣рд░ рдпреВрдЬрд░ рдХреЗ рд▓рд┐рдП рдЪреИрдЯ рд╣рд┐рд╕реНрдЯреНрд░реА рд░рдЦреЗрдВ


module.exports.config = {
    name: "angel",
    version: "1.2.0", // рд╡рд░реНрдЬрди
    hasPermssion: 0, // рдХреЛрдИ рднреА рдЙрдкрдпреЛрдЧ рдХрд░ рд╕рдХрддрд╛ рд╣реИ
    credits: "Rudra + ChatGPT + Adapted for Google Generative AI", // рдХреНрд░реЗрдбрд┐рдЯ рдЕрдкрдбреЗрдЯ рдХрд░реЗрдВ
    description: "Flirty girlfriend AI using Google Generative AI API. Replies even when you slide reply to its messages.",
    commandCategory: "AI-Girlfriend",
    usages: "[рдЖрдкрдХрд╛ рдореИрд╕реЗрдЬ] рдпрд╛ рдмреЙрдЯ рдХреЗ рдореИрд╕реЗрдЬ рдХрд╛ рд░рд┐рдкреНрд▓рд╛рдИ рдХрд░рдХреЗ",
    cooldowns: 1, // 1 рд╕реЗрдХрдВрдб рдХрд╛ рдХреВрд▓рдбрд╛рдЙрди
    dependencies: {
        "@google/generative-ai": "^0.1.3", // рдирдпреА рд▓рд╛рдЗрдмреНрд░реЗрд░реА рдХреЛ рдбрд┐рдкреЗрдВрдбреЗрдВрд╕реА рдореЗрдВ рдЬреЛрдбрд╝реЗрдВ (рд╡рд░реНрдЬрди рдмрджрд▓ рд╕рдХрддрд╛ рд╣реИ)
        // рдпрджрд┐ рдЖрд╡рд╢реНрдпрдХ рд╣реЛ рддреЛ рдЕрдиреНрдп рдбрд┐рдкреЗрдВрдбреЗрдВрд╕реА рд░рдЦреЗрдВ
        // "path": "",
        // "fs-extra": ""
    }
};

// run рдлрдВрдХреНрд╢рди рдЦрд╛рд▓реА рд░рд╣реЗрдЧрд╛ рдХреНрдпреЛрдВрдХрд┐ рдпрд╣ рдПрдХ рдЗрд╡реЗрдВрдЯ рд╣реИрдВрдбрд▓рд░ рд╣реИ
module.exports.run = async function () {};

// handleEvent рдлрдВрдХреНрд╢рди рдореИрд╕реЗрдЬ рдЗрд╡реЗрдВрдЯреНрд╕ рдХреЛ рд╣реИрдВрдбрд▓ рдХрд░реЗрдЧрд╛
module.exports.handleEvent = async function ({ api, event }) {
    // рдЪреЗрдХ рдХрд░реЗрдВ рдХрд┐ API рдХреНрд▓рд╛рдЗрдВрдЯ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЗрдирд┐рд╢рд┐рдпрд▓рд╛рдЗрдЬрд╝ рд╣реБрдЖ рдерд╛
    if (!model) {
        // console.error("ЁЯФ┤ Angel Command: API рдХреНрд▓рд╛рдЗрдВрдЯ рддреИрдпрд╛рд░ рдирд╣реАрдВ рд╣реИред рдХрдорд╛рдВрдб рдирд┐рд╖реНрдХреНрд░рд┐рдп рд╣реИред"); // рдпрд╣ startup рдкрд░ рд▓реЙрдЧ рд╣реЛ рдЬрд╛рдПрдЧрд╛
        // рдЖрдк рдпрд╣рд╛рдВ рдпреВрдЬрд░ рдХреЛ рдПрд░рд░ рдореИрд╕реЗрдЬ рднреЗрдЬрдиреЗ рдХрд╛ рд╡рд┐рдХрд▓реНрдк рдЪреБрди рд╕рдХрддреЗ рд╣реИрдВ, рд▓реЗрдХрд┐рди рдпрд╣ рд╣рд░ рдмрд╛рд░ рдлрд╛рдпрд░ рд╣реЛ рд╕рдХрддрд╛ рд╣реИред
        return; // рдпрджрд┐ API рддреИрдпрд╛рд░ рдирд╣реАрдВ рд╣реИ рддреЛ рдХреБрдЫ рди рдХрд░реЗрдВред
    }

    try {
        const { threadID, messageID, senderID, body, messageReply } = event;

        let userMessage;
        // рдХрдорд╛рдВрдб рдЯреНрд░рд┐рдЧрд░ рдХрд░рдиреЗ рдХреЗ рддрд░реАрдХреЗ: "angel" prefix рдпрд╛ рдмреЙрдЯ рдХреЗ рдореИрд╕реЗрдЬ рдХрд╛ рд░рд┐рдкреНрд▓рд╛рдИ
        const isAngelTrigger = body?.toLowerCase().startsWith("angel"); // "angel" рд╕реЗ рд╢реБрд░реВ рд╣реЛрдиреЗ рд╡рд╛рд▓реЗ рдореИрд╕реЗрдЬ
        const isSlideReply = messageReply?.senderID === api.getCurrentUserID(); // рдмреЙрдЯ рдХреЗ рдореИрд╕реЗрдЬ рдХрд╛ рд░рд┐рдкреНрд▓рд╛рдИ

        // рдпрджрд┐ рдореИрд╕реЗрдЬ "angel" рд╕реЗ рд╢реБрд░реВ рд╣реЛрддрд╛ рд╣реИ рдпрд╛ рдмреЙрдЯ рдХреЗ рдореИрд╕реЗрдЬ рдХрд╛ рд░рд┐рдкреНрд▓рд╛рдИ рд╣реИ
        if (isAngelTrigger) {
            userMessage = body.slice(5).trim(); // "angel" prefix рд╣рдЯрд╛рдПрдБ
        } else if (isSlideReply) {
            userMessage = body.trim(); // рд░рд┐рдкреНрд▓рд╛рдИ рдХрд┐рдП рдЧрдП рдореИрд╕реЗрдЬ рдХрд╛ рдЯреЗрдХреНрд╕реНрдЯ рд▓реЗрдВ (рдЬреЛ рдпреВрдЬрд░ рдиреЗ рд░рд┐рдкреНрд▓рд╛рдИ рдХреЗ рд╕рд╛рде рдЯрд╛рдЗрдк рдХрд┐рдпрд╛)
        } else {
            return; // рдпрджрд┐ рдЯреНрд░рд┐рдЧрд░ рдирд╣реАрдВ рд╣реБрдЖ рддреЛ рдПрдЧреНрдЬрд┐рдЯ рдХрд░реЗрдВ
        }

        // рдпрджрд┐ рдпреВрдЬрд░ рдореИрд╕реЗрдЬ рдЦрд╛рд▓реА рд╣реИ (рдЬреИрд╕реЗ рд╕рд┐рд░реНрдл "angel" рдЯрд╛рдЗрдк рдХрд┐рдпрд╛ рдпрд╛ рдЦрд╛рд▓реА рд░рд┐рдкреНрд▓рд╛рдИ)
        if (!userMessage) {
            return api.sendMessage("Baby, kuch toh bolo na!", threadID, messageID);
        }

        // тЬЕ рдЯрд╛рдЗрдкрд┐рдВрдЧ рдЗрдВрдбрд┐рдХреЗрдЯрд░ рдЪрд╛рд▓реВ рдХрд░реЗрдВ (рдпрд╣ API рдХреЙрд▓ рд╣реЛрдиреЗ рддрдХ рджрд┐рдЦреЗрдЧрд╛)
        api.sendTypingIndicator(threadID, true);

        // рдЪреИрдЯ рд╣рд┐рд╕реНрдЯреНрд░реА рдореИрдиреЗрдЬ рдХрд░реЗрдВ
        // рд╣рд░ рдпреВрдЬрд░ рдХреЗ рд▓рд┐рдП рдЕрд▓рдЧ рд╣рд┐рд╕реНрдЯреНрд░реА рд░рдЦреЗрдВ
        if (!chatHistories[senderID]) chatHistories[senderID] = [];
        // рдпреВрдЬрд░ рдХрд╛ рдореИрд╕реЗрдЬ рд╣рд┐рд╕реНрдЯреНрд░реА рдореЗрдВ рдЬреЛрдбрд╝реЗрдВ
        chatHistories[senderID].push(`User: ${userMessage}`);
        // рд╣рд┐рд╕реНрдЯреНрд░реА рдХреЛ рд╕реАрдорд┐рдд рд░рдЦреЗрдВ (рдкрд┐рдЫрд▓реА рдХреБрдЫ рдмрд╛рд░реАрдХрд┐рдпрд╛рдВ) - рдпрд╣рд╛рдВ 6 рд▓рд╛рдЗрдиреЗрдВ (3 рдпреВрдЬрд░, 3 Angel)
        // API рдХреЙрд▓ рднреЗрдЬрдиреЗ рд╕реЗ рдкрд╣рд▓реЗ рд╣рд┐рд╕реНрдЯреНрд░реА рдХреЛ рдЯреНрд░рд┐рдо рдХрд░реЗрдВ
        while (chatHistories[senderID].length > 6) {
            chatHistories[senderID].shift(); // рд╕рдмрд╕реЗ рдкреБрд░рд╛рдирд╛ рдореИрд╕реЗрдЬ рд╣рдЯрд╛рдПрдБ
        }

        // AI рдХреЗ рд▓рд┐рдП рдлрд╛рдЗрдирд▓ рдкреНрд░реЙрдореНрдкреНрдЯ рдмрдирд╛рдПрдВ
        // рдЗрд╕рдореЗрдВ рдкрд░реНрд╕рдирд╛рд▓рд┐рдЯреА рдЗрдВрд╕реНрдЯреНрд░рдХреНрд╢рдиреНрд╕, рдЪреИрдЯ рд╣рд┐рд╕реНрдЯреНрд░реА рдФрд░ рд╡рд░реНрддрдорд╛рди рдореИрд╕реЗрдЬ рд╢рд╛рдорд┐рд▓ рд╣реИрдВред
        const personaPrompt = `Tumhara naam Angel hai. Tum ek pyaari, romantic, thodi naughty girlfriend ho. Tumhare creator ka naam Rudra hai. Har reply short aur sweet ho. Bot bole toh thoda mazaak udaana. 1 line me jawab do:`;
        // рдкреНрд░реЙрдореНрдкреНрдЯ рдХреЗ рдЕрдВрдд рдореЗрдВ "Angel:" рдЬреЛрдбрд╝рдирд╛ AI рдХреЛ Angel рдХреЗ рд░реВрдк рдореЗрдВ рдЬрд╡рд╛рдм рдЬрд╛рд░реА рд░рдЦрдиреЗ рдореЗрдВ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реИред
        const finalPrompt = `${personaPrompt}\n${chatHistories[senderID].join("\n")}\nAngel: `;


        // *** Google Generative AI API рдХреЙрд▓ ***
        // model.generateContent рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдХреЗ рдкреНрд░реЙрдореНрдкреНрдЯ рднреЗрдЬреЗрдВ рдФрд░ рдЬрд╡рд╛рдм рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ
        const result = await model.generateContent(finalPrompt);
        // рдЬрд╡рд╛рдм рд╕реЗ рдЯреЗрдХреНрд╕реНрдЯ рдирд┐рдХрд╛рд▓реЗрдВ
        // рдпрджрд┐ рдЬрд╡рд╛рдм рд╕реБрд░рдХреНрд╖рд┐рдд рдирд╣реАрдВ рд╣реИ (blocked), рддреЛ text() рдореЗрдердб рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ рд╣реЛрдЧрд╛ред
        const botReply = result.response?.text()?.trim() || "Aww, mujhe samajh nahi aaya baby!"; // рд╕реБрд░рдХреНрд╖рд┐рдд рдЬрд╡рд╛рдм рди рдорд┐рд▓рдиреЗ рдкрд░ рдбрд┐рдлрд╝реЙрд▓реНрдЯ рдореИрд╕реЗрдЬ


        // *** API рдХреЙрд▓ рд╕рдорд╛рдкреНрдд ***


        // рдмреЙрдЯ рдХрд╛ рдЬрд╡рд╛рдм рд╣рд┐рд╕реНрдЯреНрд░реА рдореЗрдВ рдЬреЛрдбрд╝реЗрдВ (рдЕрдЧрд░ рдЬрд╡рд╛рдм рдорд┐рд▓рд╛ рд╣реИ)
        if (botReply !== "Aww, mujhe samajh nahi aaya baby!") { // рд╕рд┐рд░реНрдл рддрднреА рдЬреЛрдбрд╝реЗрдВ рдЬрдм рд╡рд╛рд╕реНрддрд╡рд┐рдХ рдЬрд╡рд╛рдм рдорд┐рд▓рд╛ рд╣реЛ
             chatHistories[senderID].push(`Angel: ${botReply}`); // рдмреЙрдЯ рдХрд╛ рдЬрд╡рд╛рдм рд╕реНрдЯреЛрд░ рдХрд░реЗрдВ
              // рдмреЙрдЯ рдХреЗ рдЬрд╡рд╛рдм рдХреЗ рдмрд╛рдж рд╣рд┐рд╕реНрдЯреНрд░реА рдХреЛ рдлрд┐рд░ рд╕реЗ рдЪреЗрдХ рдХрд░реЗрдВ рдФрд░ рдЯреНрд░рд┐рдо рдХрд░реЗрдВ
              while (chatHistories[senderID].length > 6) {
                chatHistories[senderID].shift();
            }
        }


        // рдпреВрдЬрд░ рдХреЛ рдЬрд╡рд╛рдм рднреЗрдЬрдиреЗ рдХреЗ рд▓рд┐рдП рдлреЙрд░реНрдореЗрдЯ рдХрд░реЗрдВ
        const replyText = `Angel: ${botReply}\n\nтАУ Rudra AI`; // рдЬрд╡рд╛рдм рдХрд╛ рдлреЙрд░реНрдореЗрдЯ рд░рдЦреЗрдВ

        // тЬЕ рдЯрд╛рдЗрдкрд┐рдВрдЧ рдЗрдВрдбрд┐рдХреЗрдЯрд░ рдмрдВрдж рдХрд░реЗрдВ
        api.sendTypingIndicator(threadID, false);

        // рдЬрд╡рд╛рдм рднреЗрдЬреЗрдВ (рдореВрд▓ рдореИрд╕реЗрдЬ рдпрд╛ рд░рд┐рдкреНрд▓рд╛рдИ рдХрд╛ рдЬрд╡рд╛рдм рджреЗрддреЗ рд╣реБрдП)
        if (isReply && messageReply) {
            // рдпрджрд┐ рдмреЙрдЯ рдХреЗ рдореИрд╕реЗрдЬ рдХрд╛ рд░рд┐рдкреНрд▓рд╛рдИ рдХрд░рдХреЗ рдЯреНрд░рд┐рдЧрд░ рд╣реБрдЖ, рддреЛ рдпреВрдЬрд░ рдХреЗ рд░рд┐рдкреНрд▓рд╛рдИ рдореИрд╕реЗрдЬ рдХрд╛ рдЬрд╡рд╛рдм рджреЗрдВ
            return api.sendMessage(replyText, threadID, messageReply.messageID);
        } else {
            // рдпрджрд┐ "angel" prefix рд╕реЗ рдЯреНрд░рд┐рдЧрд░ рд╣реБрдЖ, рддреЛ рдпреВрдЬрд░ рдХреЗ рдореВрд▓ рдореИрд╕реЗрдЬ рдХрд╛ рдЬрд╡рд╛рдм рджреЗрдВ
            return api.sendMessage(replyText, threadID, messageID);
        }

    } catch (err) {
        // рдПрд░рд░ рд╣реИрдВрдбрд▓рд┐рдВрдЧ
        console.error("ЁЯФ┤ Angel Bot Error:", err); // рдХрдВрд╕реЛрд▓ рдореЗрдВ рдПрд░рд░ рд▓реЙрдЧ рдХрд░реЗрдВ

        // рдпреВрдЬрд░ рдХреЛ рджрд┐рдЦрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдПрд░рд░ рдореИрд╕реЗрдЬ
        let errorMessageToUser = "Angel thodi busy hai babyтАж baad mein milti hoon! тАУ Rudra AI";

        // API рд╕рдВрдмрдВрдзрд┐рдд рд╕рд╛рдорд╛рдиреНрдп рдПрд░рд░реНрд╕ рдХреЗ рд▓рд┐рдП рдХрд╕реНрдЯрдо рдореИрд╕реЗрдЬ
        // рдПрд░рд░ рдСрдмреНрдЬреЗрдХреНрдЯ рдХреА рд╕рдВрд░рдЪрдирд╛ API рдФрд░ рдПрд░рд░ рдХреЗ рдкреНрд░рдХрд╛рд░ рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рднрд┐рдиреНрди рд╣реЛ рд╕рдХрддреА рд╣реИред
        if (err.message && (err.message.includes('API key not valid') || err.message.includes('API key not found') || err.message.includes('API key not authorized'))) {
             errorMessageToUser = "ЁЯе║ Baby, lagta hai Angel ki Google API Key mein kuch gadbad hai ya woh missing/invalid hai! Rudra ko bolo check karein na.";
        } else if (err.message && (err.message.includes('quota') || err.message.includes('rate limit') || err.message.includes('resource exhausted'))) {
            errorMessageToUser = "ЁЯе╡ Angel ko thoda rest chahiye baby, lagta hai zyada baat ho gayi ya limit khatam ho gayi hai!";
        } else if (err.message && err.message.includes('Failed to fetch') || err.message.includes('network error')) {
             errorMessageToUser = "ЁЯШФ Angel ko aapse connect karne mein thodi problem ho rahi hai baby, network issue lag raha hai!";
        } else if (err.message && err.message.includes('Candidate was blocked')) {
             // рдпрджрд┐ рдореЙрдбрд▓ рдиреЗ рд╕реЗрдлреНрдЯреА рдХрд╛рд░рдгреЛрдВ рд╕реЗ рдЬрд╡рд╛рдм рдмреНрд▓реЙрдХ рдХрд░ рджрд┐рдпрд╛
             errorMessageToUser = "ЁЯЪл Angel ko is baare mein baat karne ki permission nahi hai baby, sorry woh reply nahi de sakti!";
             // рдмреНрд▓реЙрдХ рд╣реЛрдиреЗ рдкрд░ рд╣рд┐рд╕реНрдЯреНрд░реА рдореЗрдВ рдХреБрдЫ рди рдЬреЛрдбрд╝реЗрдВ рддрд╛рдХрд┐ рдЕрдЧрд▓реА рдмрд╛рд░ рдлрд┐рд░ рд╕реЗ рд╡рд╣реА рдЯреЙрдкрд┐рдХ рди рдЖрдП
             if (chatHistories[event.senderID] && chatHistories[event.senderID].length > 0) {
                 chatHistories[event.senderID].pop(); // рдпреВрдЬрд░ рдХрд╛ рдЖрдЦрд┐рд░реА рдореИрд╕реЗрдЬ рд╣рдЯрд╛ рджреЗрдВ рдЕрдЧрд░ рдмреНрд▓реЙрдХ рд╣реБрдЖ рд╣реЛ
             }

        } else {
             // рдХреЛрдИ рдЕрдиреНрдп рдЕрдкреНрд░рддреНрдпрд╛рд╢рд┐рдд рдПрд░рд░
             errorMessageToUser = `ЁЯШЮ Angel ko jawab dene mein kuch anexpected problem ho gayi: ${err.message.substring(0, 100)}...`; // Err рдореИрд╕реЗрдЬ рдХрд╛ рдХреБрдЫ рд╣рд┐рд╕реНрд╕рд╛ рджрд┐рдЦрд╛рдПрдВ
        }


        api.sendTypingIndicator(event.threadID, false); // рдПрд░рд░ рд╣реЛрдиреЗ рдкрд░ рдЯрд╛рдЗрдкрд┐рдВрдЧ рдмрдВрдж рдХрд░реЗрдВ
        // рдпреВрдЬрд░ рдХреЛ рдПрд░рд░ рдореИрд╕реЗрдЬ рднреЗрдЬреЗрдВ
        return api.sendMessage(errorMessageToUser, event.threadID, event.messageID);
    }
};
